
import type { Database } from './database.types'; // Generated by Supabase CLI

// Infer types from Supabase schema
export type Client = Database['public']['Tables']['clients']['Row'];
export type InsertClient = Database['public']['Tables']['clients']['Insert'];
export type UpdateClient = Database['public']['Tables']['clients']['Update'];

export type Company = Database['public']['Tables']['companies']['Row'];
export type InsertCompany = Database['public']['Tables']['companies']['Insert'];
export type UpdateCompany = Database['public']['Tables']['companies']['Update'];

export type Courier = Database['public']['Tables']['couriers']['Row'];
export type InsertCourier = Database['public']['Tables']['couriers']['Insert'];
export type UpdateCourier = Database['public']['Tables']['couriers']['Update'];

// For Shipment, we might want to include related data like client and courier names
export interface ShipmentWithRelations extends Database['public']['Tables']['shipments']['Row'] {
  clients: Pick<Client, 'name'> | null; // Assuming clients table has a name
  couriers: Pick<Courier, 'name'> | null; // Assuming couriers table has a name
}
export type InsertShipment = Database['public']['Tables']['shipments']['Insert'];
export type UpdateShipment = Database['public']['Tables']['shipments']['Update'];


export type PackageSize = 'small' | 'medium' | 'large';
export type DeliveryUrgency = 'standard' | 'express' | 'urgent';

export interface DeliveryOptionSuggestion {
  courierSuggestion: string;
  routeSuggestion: string;
  estimatedDeliveryTime: string;
  estimatedCost: string;
}

export interface NavItem {
  title: string;
  href: string;
  icon: React.ElementType;
  disabled?: boolean;
  external?: boolean;
  label?: string;
  description?: string;
  items?: NavItem[];
}
